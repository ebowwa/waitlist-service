version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: waitlist_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-waitlist}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-waitlist}"]
      interval: 5s
      timeout: 5s
      retries: 5

  waitlist:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: waitlist_app
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changeme}@db:5432/${POSTGRES_DB:-waitlist}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID}
      PORT: 3030
      PYTHONPATH: /app/src
      ENVIRONMENT: development
      SUPABASE_URL: ${SUPABASE_URL:-http://db:5432}
      SUPABASE_KEY: ${SUPABASE_KEY:-dummy-key-for-development}
      SUPABASE_JWT_SECRET: ${SUPABASE_JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters-long}
    ports:
      - "3030:3030"
    volumes:
      - ./src:/app/src
      - ./sql_queries:/app/sql_queries
      - ./.env:/app/.env
    depends_on:
      db:
        condition: service_healthy
    restart: always

volumes:
  postgres_data:
